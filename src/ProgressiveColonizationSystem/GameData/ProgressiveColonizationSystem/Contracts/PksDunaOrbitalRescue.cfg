CONTRACT_TYPE
{
    // See https://github.com/jrossignol/ContractConfigurator/wiki/Contract-Type
    name = PksDunaOrbitalRescue
    title = Format("Rescue <<1>> from orbit of <<2>> and bring <<P:1>> to your base on <<3>>", [@adventurer.DisplayName(), @/stuckAtBody, @/goingToBody])
    genericTitle = Space Adventurer Rescue
    // complains its not needed:  contractGroup = SpaceAdventurers
    description = Format("<<1>> really likes the color white.  The whole reason why <<p:1>> joined KSP in the first place is because of the spiffy white suits, and the only reason why <<p:1>> wasn't on the short list of colonists for Duna was because of <<o:1>> insistance that Duna was white and a little red rather than the accepted answer of red with maybe a little white.  But <<1>> resolved to prove them all wrong and go to Duna!  But <<2>> didn't get far enough in the Kerbonaut program to learn how to land, and is gonna need a little help.", [@/adventurer.DisplayName(), @adventurer.FirstName(), @/stuckAtBody.DisplayName()])
    genericDescription = KSP goes through a highly selective vetting process for crewing stations, but sometimes kerbals feel like their amazing talents went unappreciated and set out for your colonies on their own.  Usually with mixed results.
    synopsis = We want you to rescue a kerbal
    completedMessage = Format("<<1>> has joined your colony on <<2>>!", [@adventurer.FirstName(), @/goingToBody.DisplayName()])
    prestige = Significant
    group = PksRescueContractGroup

    DATA
    {
        title = This is where we're going to tote the kerbal to
        hidden = true
        type = CelestialBody
        goingToBody = Duna
    }
    DATA
    {
        title = This is where we're going to pick up the kerbal
        hidden = true
        type = CelestialBody
        stuckAtBody = Duna
    }
    DATA
    {
        title = This is who we're going to pick up
        hidden = true
        type = Kerbal
        adventurer = NewKerbal()
    }

    PARAMETER
    {
        name = GetToNewHome
        type = PksOnStationParameter

        // Here we're saying that the place the kerbal arrives has to have at least one tier-3 farm on it
        researchCategory = agriculture
        tier = 3
        
        // And it has to be on the target world
        body = @/goingToBody

        // And of course this is the kerbal that has to be there.
        kerbal = @/adventurer
    }

    REQUIREMENT
    {
        name = FarmingResearched
        type = PksTier

        // Here we're saying that we're not going to offer the contract unless the contract is for a
        // body with the right tech.
        researchCategory = agriculture
        tier = 2
        targetBody = @/goingToBody
    }

    BEHAVIOUR
    {
        name = SpawnVessel
        type = SpawnVessel
        deferVesselCreation = false
        VESSEL
        {
            name = Format("<<1>>'s <<2>>", [@/adventurer.ToString().FirstWord(), "shipwreck"])
            craftPart = mk1pod
            targetBody = @/stuckAtBody

            CREW
            {
                addToRoster = true
                name = @/adventurer
            }

			ORBIT
			{
				SMA = 686959.99593236914
				ECC = 0.012323694153547126
				INC = 21.6764731898754832
				LPE = 190.54953904110772
				LAN = 27.840941925294942
				MNA = 2.3937970792114149
				EPH = 128775571.8225528
				REF = 6 // Ignored
			}
        }
    }
}